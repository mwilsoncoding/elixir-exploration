---
name: CI
on:
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mix-env:
          - dev
          - test
            #          - prod
        elixir-vsn:
          #          - 1.11.4
          #          - 1.12.3
          #          - 1.13.4
          - 1.14.0
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            deps
            _build
            .mix
            .hex
          key: elixir_dev-${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            elixir_dev-${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}
      - name: Build and Push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/elixir_dev-builder:${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ github.sha }}
          context: .
          target: builder
          build-args: |
            MIX_ENV=${{ matrix.mix-env }}
            ELIXIR_VERSION=${{ matrix.elixir-vsn }}
      - name: Copy Docker Contents to Host
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker container create --name cache ghcr.io/${{ github.repository }}/elixir_dev-builder:${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ github.sha }}
          docker container cp cache:/opt/app/deps .
          docker container cp cache:/opt/app/_build .
          docker container cp cache:/opt/app/.mix .
          docker container cp cache:/opt/app/.hex .
  check-formatted:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mix-env:
          - dev
        elixir-vsn:
          #          - 1.11.4
          #          - 1.12.3
          #          - 1.13.4
          - 1.14.0
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker container run ghcr.io/${{ github.repository }}/elixir_dev-builder:${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ github.sha }} mix format --check-formatted
  dialyzer:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mix-env:
          - test
        elixir-vsn:
          #          - 1.11.4
          #          - 1.12.3
          #          - 1.13.4
          - 1.14.0
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker container run ghcr.io/${{ github.repository }}/elixir_dev-builder:${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ github.sha }} mix dialyzer
  credo:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mix-env:
          - dev
        elixir-vsn:
          #          - 1.11.4
          #          - 1.12.3
          #          - 1.13.4
          - 1.14.0
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker container run ghcr.io/${{ github.repository }}/elixir_dev-builder:${{ matrix.mix-env }}-elixir-${{ matrix.elixir-vsn }}-${{ github.sha }} mix credo
